#!/bin/sh
# Author: Scott MacDonald
# Purpose: Cross platform script to copy text to the system clipboard.
. "$S_DOTFILE_ROOT"/shell_profile/functions.sh
. "$S_DOTFILE_ROOT"/sh/cli.sh

print_help() {
  echo "Cross platform tool to copy text from stdin to the system clipboard."
  echo "Usage: $(basename "$0") [-V] [-f path/to/input] [text...]"
  echo
  echo "To copy text from a file:       $(basename "$0") -f path/to/file"
  echo " .. or directly from arguments: $(basename "$0") your text here"
  echo " .. or from standard input:     $(basename "$0")"
}

main() {
  # Tool option parsing.
  while getopts 'hf:V' opt; do
    case "$opt" in
      h) print_help
         exit
         ;;
      f) input_file="$OPTARG"
         # Verify file exists.
         if [ ! -f "$input_file" ]; then
          exit_with_message 3 "Input file does not exist: $input_file"
         fi
         ;;
      V) set_verbose 1
         ;;
      ?) print_help
         exit 2
         ;;
    esac
  done

  # Remove process arguments.
  shift "$((OPTIND -1))"

  # Command to copy is different on different platforms.
  if [ -n "$input_file" ]; then
    verbose "Using file as input source: $input_file"

    if is_osx; then
      pbcopy < "$input_file"
    elif is_linux; then
      xsel -i < "$input_file"
    else
      exit_with_message 2 "platform not supported"
    fi
  elif [ "$#" -gt 0 ]; then
    verbose "Using command args as input source: $*"

    if is_osx; then
      echo "$*" | pbcopy
    elif is_linux; then
      echo "$*" | xsel -i
    else
      exit_with_message 2 "platform not supported"
    fi
  else
    verbose "Using stdin as input source"

    if is_osx; then
      pbcopy
    elif is_linux; then
      xsel -i
    else
      exit_with_message 2 "platform not supported"
    fi
  fi
}

main "$@"
